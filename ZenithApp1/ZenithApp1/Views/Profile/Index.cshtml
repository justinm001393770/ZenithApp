@using ZenithApp1.ViewModels.Profile
@using ZenithApp1.Models
@model ProfileViewModel

@{
    ViewBag.Title = "Profile";
}

<div class="two-column">
    <div>
        <div class="outer container noselect">
            <div class="outer-header">
                <div class="header-text-lg"><i class="fas fa-user icon-profile"></i>@Model.profileOwner.UserName</div>
            </div>
            <div class="profile-main-component">
                <div class="profile-picture-container" style="background-image: url(@Model.profileOwner.getProfilePicture())">
                    @if (Model.profileOwner.getProfilePicture() == null || Model.profileOwner.getProfilePicture() == "")
                    {
                        <img class="noselect" src="~/Content/Images/blankuser3.png">
                    }
                </div>
                <div class="profile-stats-container">
                    <div class="stats-heading">
                        <div>Posts</div>
                        <div>Games</div>
                        <div>Followers</div>
                        <div>Following</div>
                    </div>
                    <div class="profile-stats">
                        <div class="stat-number" onclick="@("window.location.href='" + @Url.Action("Index", "Profile", new { userName = Model.profileOwner.UserName }) + "'");">@Model.profileOwner.Posts.Count()</div>
                        <div class="stat-number" onclick="@("window.location.href='" + @Url.Action("ViewOthersGames", "Games", new { userName = Model.profileOwner.UserName }) + "'");">@Model.profileOwner.GameLibraries.Count()</div>
                        <div class="stat-number" onclick="@("window.location.href='" + @Url.Action("OtherFollowers", "Followers", new { userName = Model.profileOwner.UserName }) + "'");">@Model.profileOwner.Followings1.Count()</div>
                        <div class="stat-number" onclick="@("window.location.href='" + @Url.Action("OtherFollowing", "Following", new { userName = Model.profileOwner.UserName }) + "'");">@Model.profileOwner.Followings.Count()</div>
                    </div>
                    @if (Model.profileOwner.UserID == LoggedInUser.UserID)
                    {
                        <div style="width: 100%">
                            <button class="btn-zenith blue" onclick="location.href='@Url.Action("Edit", "Profile")'">
                                Edit Profile
                            </button>
                        </div>
                    }
                    else
                    {
                        <div class="profile-button-tray-other">
                            <button class="btn-zenith other">
                                Message
                            </button>
                            @if (LoggedInUser.IsFollowingThisId(Model.profileOwner.UserID))
                            {
                                <button class="btn-zenith red-other" onclick="@("window.location.href='" + @Url.Action("Unfollow", "Profile", new { userName = Model.profileOwner.UserName }) + "'");">
                                    Unfollow
                                </button>
                            }
                            else
                            {
                                <button class="btn-zenith red" onclick="@("window.location.href='" + @Url.Action("Follow", "Profile", new { userName = Model.profileOwner.UserName }) + "'");">
                                    Follow
                                </button>
                            }
                        </div>
                    }

                </div>
            </div>
        </div>
        <div>
            <div class="outer container">
                <div class="outer-header">
                    <div class="header-text-sm noselect">New Post</div>
                </div>
                <div class="new-post-container">
                    <div class="profile-picture-container-circle-sm" style="background-image: url(@Session["UserProfileImage"])">
                        @if (Session["UserProfileImage"] == null || Session["UserProfileImage"].ToString() == "")
                        {
                            <img class="noselect" src="~/Content/Images/blankuser3.png">
                        }
                    </div>
                    <section id="PostForm">
                        @using (Html.BeginForm("Create", "Post", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                        {
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.TextBoxFor(m => m.post.PostTitle, new { @placeholder = "Post Title", @class = "inner text-box-1", @autocomplete = "off", required = "required" })
                            @Html.ValidationMessageFor(m => m.post.PostTitle, "", new { @class = "text-danger" })
                            @Html.TextAreaFor(m => m.post.PostContents, new { @placeholder = "Share the message in this box...", @class = "inner text-box-2", @style = "overflow:auto;resize:none", @autocomplete = "off", required = "required" })
                            @Html.ValidationMessageFor(m => m.post.PostContents, "", new { @class = "text-danger" })
                            @Html.HiddenFor(m => m.post.PostedByID, new { Value = LoggedInUser.UserID })
                            @Html.HiddenFor(m => m.post.PostedToID, new { Value = Model.profileOwner.UserID })
                            @Html.HiddenFor(m => m.post.IsActive, new { Value = true })
                            @Html.HiddenFor(m => m.post.IsReported, new { Value = false })
                            <div class="new-post-button-container">
                                <div></div>
                                <div><button type="button" class="collapsible btn-zenith btn-sm other">Add Media</button></div>
                                <div><input type="submit" value="Create Post" class="btn-zenith btn-sm red" /></div>
                                <div class="imageselectorcontent" id="selectcontent">
                                    <div class="picker">
                                        <select multiple="multiple" class="image-picker inner show-html"
                                                name="@Html.NameFor(m => m.editPostMedias)"
                                                id="@Html.IdFor(m => m.editPostMedias)">

                                            @{List<Medium> pickerImages = Model.usersMedia;}
                                            @{long pickerCnt = 0;}
                                            @foreach (Medium m in pickerImages)
                                            {
                                                pickerCnt = pickerCnt + 1;
                                                if (m.MediaPath != null || m.MediaPath.ToString() != "")
                                                {
                                                    if (pickerCnt > 1)
                                                    {

                                                        <option data-img-src="@(m.MediaPath)"
                                                                data-img-alt="@(m.MediaName)" class="img-select-item" value="@(m.MediaID)">
                                                            @(m.MediaName)
                                                        </option>
                                                    }
                                                    else
                                                    {
                                                        <option data-img-src="@(m.MediaPath)"
                                                                data-img-class="first" class="img-select-item" data-img-alt="@(m.MediaName)" value="@(m.MediaID)">
                                                            @(m.MediaName)
                                                        </option>
                                                    }
                                                }
                                            }

                                        </select>
                                    </div>
                                </div>
                            </div>
                                                }
                    </section>
                    <div></div>

                </div>
            </div>
        </div>
        <div>
        </div>
        <div>

            @{ List<Post> lp = ViewBag.Projects;
                int postCount = lp.Count();
            }
            @if (postCount > 0)
            {
                <div class="inner-header container noselect">
                    <div class="outer-header">
                        <div class="header-text-sm">Post Feed</div>
                    </div>
                </div>
                                <table style="width: 100%" class="table table-striped table-bordered table-condensed infinite-scroll">
                                    <tbody>
                                        @Html.Partial("_PostData", (ViewBag.Projects as List<Post>))
                                    </tbody>
                                </table>
            }
            else
            {
                <div class="outer container">
                    <div class="outer-header">
                        <div class="header-text-sm noselect">Post Feed</div>
                    </div>
                    <div class="none-to-show">
                        <div class="cry-text-sm"><i class="far fa-sad-cry no-data-icon-lg"></i></div>
                        <div class="header-text-xlg inactive-text noselect">No Posts to Show</div>
                    </div>
                </div>
            }
        </div>
        <div>
        </div>
    </div>
    <div class="sticky-container">
        <div class="outer container noselect">
            <div class="outer-header view-all">
                <div class="header-text-sm">Games</div>
                <div class="header-text-sm noselect inactive"><input class="btn-none header-text-sm header-item inactive" type="button" value="View All" onclick="location.href='@Url.Action("ViewOthersGames", "Games", new { userName = Model.profileOwner.UserName })'" /></div>
                @*@Html.Action("Following", "ProfileController", new { FollowingID = "00", FollowerID = "00" });*@
            </div>
            @{List<GameLibrary> rndmGames = Model.profileOwner.GameLibraries.OrderBy(r => Guid.NewGuid()).Take(3).ToList();}
            @if (rndmGames.Count() > 0)
            {
                <div class="preview-profile-games">
                    @foreach (GameLibrary g in rndmGames)
                    {
                        DBGame dbg = DBGame.getDBGameById(g.GameID);

                        <div class="game-image-container-sm" title="@(dbg.GameName)" style="background-image: url(//images.igdb.com/igdb/image/upload/t_cover_big/@(dbg.GameImgURL).jpg)">
                            @if (dbg.GameImgURL == null)
                            {
                                <div class="game-blank-sm"><ion-icon name="logo-game-controller-b"></ion-icon></div>
                            }
                        </div>
                    }
                </div>
            }
            else
            {
                <div class="none-to-show">
                    <div class="cry-text-sm"><i class="far fa-sad-cry no-data-icon"></i></div>
                    <div class="header-text-sm inactive-text">No Games to Show</div>
                </div>
            }
        </div>
        <div class="outer container noselect">
            <div class="outer-header view-all">
                <div class="header-text-sm">Followers</div>
                <div class="header-text-sm"><input class="btn-none header-text-sm header-item inactive" type="button" value="View All" onclick="location.href='@Url.Action("OtherFollowers", "Followers", new { userName = Model.profileOwner.UserName })'" /></div>
                @*@Html.Action("Following", "ProfileController", new { FollowingID = "00", FollowerID = "00" });*@
            </div>
            @{List<Following> rndmFollower = Model.profileOwner.Followings1.OrderBy(r => Guid.NewGuid()).Take(8).ToList();}
            @if (rndmFollower.Count() > 0)
            {
                <div class="preview-profile-follow">
                    @foreach (Following f in rndmFollower)
                {
                    User fer = ZenithApp1.Models.User.getUserById(f.FollowerID);

                        <div class="profile-picture-container-sm" onclick="location.href='@Url.Action("Index", "Profile", new { userName = fer.UserName })'" title="@(fer.UserName)" style="background-image: url(@(fer.getProfilePicture())">
                            @if (fer.getProfilePicture() == null || fer.getProfilePicture().ToString() == "")
                            {
                                <img class="noselect" src="~/Content/Images/blankuser3.png">
                            }
                        </div>
                    }
                </div>
            }
            else
            {
                <div class="none-to-show">
                    <div class="cry-text-sm"><i class="far fa-sad-cry no-data-icon"></i></div>
                    <div class="header-text-sm inactive-text">No Followers to Show</div>
                </div>
            }
        </div>

        <div class="outer container noselect">
            <div class="outer-header view-all">
                <div class="header-text-sm">Following</div>
                <div class="header-text-sm">
                    <input class="btn-none header-text-sm header-item inactive" type="button" value="View All" onclick="location.href='@Url.Action("OtherFollowing", "Following", new { userName = Model.profileOwner.UserName })'" />
                </div>
                @*@Html.Action("Following", "ProfileController", new { FollowingID = "00", FollowerID = "00" });*@
            </div>
            @{List<Following> rndmFollowing = Model.profileOwner.Followings.OrderBy(r => Guid.NewGuid()).Take(8).ToList();}
            @if (rndmFollowing.Count() > 0)
            {
                <div class="preview-profile-follow">
                    @foreach (Following f in rndmFollowing)
                {
                    User fing = ZenithApp1.Models.User.getUserById(f.FolloweeID);

                        <div class="profile-picture-container-sm" onclick="location.href='@Url.Action("Index", "Profile", new { userName = fing.UserName })'" title="@(fing.UserName)" style="background-image: url(@(fing.getProfilePicture())">
                            @if (fing.getProfilePicture() == null || fing.getProfilePicture().ToString() == "")
                            {
                                <img class="noselect" src="~/Content/Images/blankuser3.png">
                            }
                        </div>
                    }
                </div>
            }
            else
            {
                <div class="none-to-show">
                    <div class="cry-text-sm"><i class="far fa-sad-cry no-data-icon"></i></div>
                    <div class="header-text-sm inactive-text">No Following to Show</div>
                </div>
            }
        </div>

    </div>
</div>

@section scripts{
    <script src="~/Scripts/lazyLoading.js"></script>
    <script type="text/javascript">
        $(function () {

        });

        var url = '@Url.RouteUrl("PostDataList")';
        $(window).scroll(scrollHandler);
    </script>
    <script src="https://code.jquery.com/jquery-3.0.0.min.js" type="text/javascript"></script>
    <script src="~/Scripts/imagepicker.js" type="text/javascript"></script>
    <script type="text/javascript">

        jQuery("select.image-picker").imagepicker({
            hide_select: false,
        });

        jQuery("select.image-picker.show-labels").imagepicker({
            hide_select: false,
            show_label: false,
        });

        jQuery("select.image-picker.limit_callback").imagepicker({
            limit_reached: function () { alert('We are full!') },
            hide_select: false
        });

        var container = jQuery("select.image-picker.masonry").next("ul.thumbnails");
        container.imagesLoaded(function () {
            container.masonry({
                itemSelector: "li",
            });
        });

    </script>

    <script>
        var coll = document.getElementsByClassName("collapsible");
        var i;

        for (i = 0; i < coll.length; i++) {
            coll[i].addEventListener("click", function () {
                this.classList.toggle("active-add-media");
                var content = document.getElementById("selectcontent")
                if (content.style.display === "grid") {
                    content.style.display = "none";
                } else {
                    content.style.display = "grid";
                }
            });
        }
    </script>
}